<Window x:Class="CommentSharedPlaylist.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:utils="clr-namespace:CommentSharedPlaylist.Utils"
        Title="{Binding Title}" Height="630" Width="980"
        DataContext="{Binding MainViewModel, Source={StaticResource ViewModelLocator}}" 
        WindowStyle="None" 
        ShowInTaskbar="True" 
        WindowStartupLocation="CenterScreen" Background="#FF282828" ResizeMode="CanResizeWithGrip" AllowsTransparency="True">
    <Window.Resources>
        <utils:AlbumToImagePathConverter x:Key="albumToImagePathConverter"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyleClose" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FFBD3200"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFBD3200"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFBD3200"/>
                                <Setter Property="Background" TargetName="border" Value="#FFBD3200"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyleComment" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="10" Padding="10,0">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyleSend" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RenderTransformOrigin="0.5,0.5">
                                <ContentPresenter.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="RenderTransform" TargetName="contentPresenter">
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>

        <ControlTemplate x:Key="SelectedTemplate" TargetType="ListViewItem">
            <Grid  Margin="0,5" Height="32">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Rectangle Fill="#FF1ED760" VerticalAlignment="Stretch" />
                <TextBlock Grid.Column="1" Margin="10,0,10,0"  Text="&#xf001;"  FontFamily="pack://application:,,,/Fonts/#FontAwesome"  VerticalAlignment="Center" Foreground="White" FontWeight="Bold" HorizontalAlignment="Center" FontSize="12" />
                <TextBlock Grid.Column="2"  Text="{Binding Name}" VerticalAlignment="Center" />
            </Grid>
        </ControlTemplate>
        <Style x:Key="ListViewItemStyle"  TargetType="ListViewItem">
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true" />
                        <Condition Property="Selector.IsSelectionActive" Value="true" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template" Value="{StaticResource SelectedTemplate}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="ListViewItemStylePlaylist"  >
            <Grid  Margin="0,5" Height="32">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Rectangle Fill="Transparent" VerticalAlignment="Stretch" />
                <TextBlock Grid.Column="1" Margin="10,0,10,0"  Text="&#xf001;"  FontFamily="pack://application:,,,/Fonts/#FontAwesome"  VerticalAlignment="Center" Foreground="White" FontWeight="Bold" HorizontalAlignment="Center" FontSize="12" />
                <TextBlock Grid.Column="2"  Text="{Binding Name}" VerticalAlignment="Center" />
            </Grid>
        </DataTemplate>
    </Window.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="200" MaxWidth="400"/>
            <ColumnDefinition Width="3" />
            <ColumnDefinition Width="Auto" MinWidth="200" MaxWidth="400"/>
            <ColumnDefinition Width="3" />
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.ColumnSpan="5" Background="Transparent" MouseDown="titleBar_OnMouseDown">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="30"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0"  Text="&#xf086;"  FontFamily="pack://application:,,,/Fonts/#FontAwesome"  VerticalAlignment="Center" Foreground="#FF1ED760" FontWeight="Bold" HorizontalAlignment="Center" FontSize="14.667" />
            <TextBlock Grid.Column="1"  Text="Comment Shared Playlists" VerticalAlignment="Center" Foreground="#FF1ED760" FontWeight="Bold" />
            <Rectangle Grid.ColumnSpan="2" VerticalAlignment="Bottom" Height="3" Fill="#FF333333" />
            <Button Grid.Column="1" HorizontalAlignment="Right" Content="&#xf00d;" Background="#FF8F2600" FontFamily="pack://application:,,,/Fonts/#FontAwesome" BorderThickness="0" Width="50" Foreground="White" Click="Button_Click" Style="{DynamicResource ButtonStyleClose}" Height="25" VerticalAlignment="Top" FontSize="16" BorderBrush="{x:Null}"></Button>
        </Grid>


        <ListView Grid.Column="0" ItemsSource="{Binding CollaborativePlaylists}" SelectedItem="{Binding SelectedPlaylist, Mode=TwoWay}" Grid.Row="1" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White" ItemContainerStyle="{StaticResource ListViewItemStyle}" ItemTemplate="{StaticResource ListViewItemStylePlaylist}" />

        <GridSplitter Grid.Column="1" Grid.Row="1" Width="3" HorizontalAlignment="Stretch" Background="#FF333333" />


        <ListView Grid.Column="2" ItemsSource="{Binding SelectedPlaylist.Tracks.PlaylistTracks}" SelectedItem="{Binding SelectedTrack}" Grid.Row="1" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid Height="32" Margin="2,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="32" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <Image Source="{Binding Track.Album, Converter={StaticResource albumToImagePathConverter}}" Grid.RowSpan="2" Grid.Column="0" />

                        <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding Track.AllArtists}"/>
                        <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding Track.Name}"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <GridSplitter Grid.Column="3" Grid.Row="1"  Width="3" HorizontalAlignment="Stretch" Background="#FF333333"/>


        <Grid Grid.Column="4" Grid.Row="1" >
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ListView ItemsSource="{Binding SelectedTrack.Track.Comments}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White">
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="[Add Comment]" Tag="{Binding SelectedTrack.Track}" Click="addCommentForTrack" />
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="{Binding Username}" FontWeight="Bold" FontSize="14" />
                            <TextBlock Text="{Binding Comment}" FontWeight="Medium" FontSize="12" />
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <Grid Grid.Row="1" HorizontalAlignment="Stretch" Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBox Margin="0,0,6,0" Grid.Column="0" Text="{Binding NewComment.Comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="tbComment" HorizontalAlignment="Stretch" Style="{DynamicResource TextBoxStyleComment}"/>
                <Button Margin="6,0" Grid.Column="1" Content="&#xf1d8;" Click="ButtonBase_OnClick" HorizontalAlignment="Right"  FontFamily="pack://application:,,,/Fonts/#FontAwesome" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF1ED760" Style="{DynamicResource ButtonStyleSend}" FontSize="14.667"/>
            </Grid>

        </Grid>
    </Grid>



</Window>
